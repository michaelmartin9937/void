---
import { type CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

// components
import Category from "@components/Category/Category.astro";

// utils
import { getAllAuthorsData } from "@js/blogUtils";
import { formatDate } from "@js/textUtils";

interface Props {
  post: CollectionEntry<"blog">;
  showDescription?: boolean;
  class?: string;
  rest?: any; // catch-all for any additional parameters, such as "aria-label"
}

const {
  post,
  showDescription = false,
  class: className,
  ...rest
} = Astro.props as Props;

const { title, description, pubDate, heroImage, categories, authors } =
  post.data;

const authorsData = await getAllAuthorsData(authors);
---

<article class=`flex flex-col ${className}` {...rest}>
  <div class="relative">
    <div class="absolute left-0 top-0 z-10 p-2">
      <div class="flex flex-wrap items-center gap-x-2 text-sm">
        {categories.map((category) => <Category category={category} />)}
      </div>
    </div>
    <a href={`/blog/${post.slug}/`} class="relative">
      <div class="sr-only">cover for {title}</div>
      <div class="shrink-0 justify-center overflow-hidden sm:justify-normal">
        <figure>
          <!-- view transitions doesn't play great with animations on the same element. Recommend not using animations on items you use view transisions.
          Here, you could add transition:name={`blog-image-${post.slug}`} to add transitions to blog post images. Again, it doesn't play nicely with animations -->
          <Image
            src={heroImage}
            alt={`cover for ${title}`}
            height={700}
            quality="high"
            class="aspect-video h-auto max-h-96 w-full object-cover transition-all duration-500 hover:scale-[1.02]"
          />
        </figure>
      </div>
    </a>
  </div>
  <div class="w-full">
    <div class="mt-1 flex flex-wrap gap-2 text-sm opacity-90 dark:opacity-80">
      <!-- published date -->
      <p class="whitespace-nowrap">
        {formatDate(pubDate)}
      </p>
      <span>&bull;</span>
      <!-- first author -->
      <p class="whitespace-nowrap">
        by {authorsData[0].data.name}
      </p>
    </div>

    <!-- title and description -->
    <div class="mt-1">
      <a href={`/blog/${post.slug}/`} class="group">
        <div>
          <div class="">
            <h2 class="underline-ltr inline text-lg font-medium lg:text-xl">
              {title}
            </h2>
          </div>

          {
            showDescription && (
              <p class="description mt-1 text-sm lg:text-base">{description}</p>
            )
          }
        </div>
      </a>
    </div>
  </div>
</article>
