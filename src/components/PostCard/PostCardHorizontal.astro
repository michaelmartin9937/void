---
import { type CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

// components
import Category from "@components/Category/Category.astro";

// utils
import { getAllAuthorsData } from "@js/blogUtils";
import { slugify, formatDate, humanize } from "@js/textUtils";

interface Props {
  post: CollectionEntry<"blog">;
  showDescription?: boolean;
  class?: string;
  rest?: any; // catch-all for any additional parameters, such as "aria-label"
}

const {
  post,
  showDescription = false,
  class: className,
  ...rest
} = Astro.props as Props;
const { title, description, categories, authors, pubDate, heroImage } =
  post.data;

const authorsData = await getAllAuthorsData(authors);
---

<article
  class=`flex grid gap-4 md:grid-cols-2 md:gap-6 py-4 border-y border-base-300 dark:border-base-600 ${className}`
  {...rest}
>
  <a
    href={`/blog/${post.slug}/`}
    class="shrink-0 justify-center overflow-hidden sm:justify-normal"
  >
    <div class="sr-only">cover for {title}</div>
    <figure>
      <!-- view transitions doesn't play great with animations on the same element. Recommend not using animations on items you use view transisions.
          Here, you could add transition:name={`blog-image-${post.slug}`} to add transitions to blog post images. Again, it doesn't play nicely with animations -->
      <Image
        src={heroImage}
        alt={`Cover for ${title}`}
        height={700}
        quality="high"
        class="h-auto max-h-96 w-full object-cover transition-all duration-500 hover:scale-[1.02]"
      />
    </figure>
  </a>
  <div class="flex w-full flex-col justify-center gap-2">
    <!-- categories -->
    <div class="flex flex-wrap items-center gap-x-2 text-sm">
      {categories.map((category) => <Category category={category} />)}
    </div>

    <!-- title and description -->
    <div>
      <a href={`/blog/${post.slug}/`} class="group">
        <div>
          <div class="">
            <h2 class="underline-ltr inline text-lg font-medium lg:text-xl">
              {title}
            </h2>
          </div>

          {
            showDescription && (
              <p class="description mt-1 text-sm lg:text-base">{description}</p>
            )
          }
        </div>
      </a>
    </div>

    <div class="flex flex-wrap gap-1 text-sm opacity-80">
      <!-- published date -->
      <p class="whitespace-nowrap">
        {formatDate(pubDate)}
      </p>
      <span>&bull;</span>
      <!-- first author -->
      <p class="whitespace-nowrap">
        by {authorsData[0].data.name}
      </p>
    </div>
  </div>
</article>
